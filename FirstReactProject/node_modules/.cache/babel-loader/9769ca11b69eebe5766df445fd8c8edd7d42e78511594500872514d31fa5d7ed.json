{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ms403\\\\Desktop\\\\MyProjects\\\\PractiseProjects\\\\FirstReactProject\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport About from './components/About';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport { Routes, BrowserRouter as Router, Route } from \"react-router\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('dark');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#1f1f1f';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = '#ffffff';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"Text Utilities\",\n        mode: mode,\n        toggleMode: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-3\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/about\",\n            element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(TextForm, {\n              showAlert: showAlert,\n              heading: \"Enter the text to parse\",\n              mode: mode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"DHF/nx1gHUd0q3BuNa+x7397MMw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["About","Alert","Navbar","TextForm","Routes","BrowserRouter","Router","Route","React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","path","element","heading","_c","$RefreshReg$"],"sources":["C:/Users/ms403/Desktop/MyProjects/PractiseProjects/FirstReactProject/src/App.js"],"sourcesContent":["import './App.css';\nimport About from './components/About';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport { Routes, BrowserRouter as Router, Route } from \"react-router\";\nimport React, {useState} from 'react';\n\nfunction App() {\n  const [mode, setMode] = useState('dark');\n  const [alert,setAlert] = useState(null);\n\n  const showAlert = (message, type) =>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    },2000);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light')\n    {\n      setMode('dark');\n      document.body.style.backgroundColor = '#1f1f1f';\n      showAlert(\"Dark mode has been enabled\",\"success\");\n    }\n    else\n    {\n      setMode('light');\n      document.body.style.backgroundColor = '#ffffff';\n      showAlert(\"Light mode has been enabled\",\"success\");\n    }\n  }\n\n  return (\n    <>\n    <Router>\n      <Navbar title=\"Text Utilities\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n        <Routes>\n          <Route path=\"/about\" element={<About/>}>\n          </Route>\n          <Route path=\"/\" element={<TextForm showAlert={showAlert} heading = \"Enter the text to parse\" mode = {mode}/>}>\n          </Route>\n        </Routes>\n      </div>\n      <About/>\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}